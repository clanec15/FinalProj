.TH "Headers/RadixSort.hpp" 3 "Version Final" "Final Programming Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Headers/RadixSort.hpp \- Header for implementation of Radix Sort with floating point numbers\&.  

.SH SYNOPSIS
.br
.PP
\fR#include <vector>\fP
.br
\fR#include <cmath>\fP
.br
\fR#include <algorithm>\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBconvData\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBdtoi\fP (double n)"
.br
.RI "gets the rounding exponent of a floating point number "
.ti -1c
.RI "int \fBgetMax\fP (std::vector< int > arr)"
.br
.RI "Gets the largest element of a vector\&. "
.ti -1c
.RI "\fBconvData\fP \fBdvtoiv\fP (std::vector< double > vct)"
.br
.RI "converts a double datatype vector into an integet vector "
.ti -1c
.RI "void \fBcountSrt\fP (std::vector< int > &arr, int exp)"
.br
.ti -1c
.RI "void \fBRadixSrt\fP (std::vector< int > &vct)"
.br
.RI "Radix Sort\&. "
.in -1c
.SH "Detailed Description"
.PP 
Header for implementation of Radix Sort with floating point numbers\&. 


.PP
\fBAuthor\fP
.RS 4
Victor Aguilar Rodriguez (ar202341753@alm.buap.mx) 
.RE
.PP
\fBVersion\fP
.RS 4
0\&.1 
.RE
.PP
\fBDate\fP
.RS 4
2024-09-24
.RE
.PP
\fBCopyright\fP
.RS 4
Copyright (c) 2024 
.RE
.PP

.PP
Definition in file \fBRadixSort\&.hpp\fP\&.
.SH "Function Documentation"
.PP 
.SS "void countSrt (std::vector< int > & arr, int exp)"

.PP
Definition at line \fB97\fP of file \fBRadixSort\&.hpp\fP\&.
.SS "int dtoi (double n)"

.PP
gets the rounding exponent of a floating point number This function finds the rounding exponent (aka: xd*(10^n) = xi, now find n) of a floating point number

.PP
\fBParameters\fP
.RS 4
\fIn\fP the floating point number 
.RE
.PP
\fBReturns\fP
.RS 4
the rounding exponent of the FP number 
.RE
.PP

.PP
Definition at line \fB39\fP of file \fBRadixSort\&.hpp\fP\&.
.SS "\fBconvData\fP dvtoiv (std::vector< double > vct)"

.PP
converts a double datatype vector into an integet vector It gets the rounding exponent of all the elements of the input vector, gets the biggest one and multiplies all the elements of the vector with that exponent and stores it on a new integer vector

.PP
\fBParameters\fP
.RS 4
\fIvct\fP The input vector (double) 
.RE
.PP
\fBReturns\fP
.RS 4
A \fBconvData\fP struct
.RE
.PP
\fBSee also\fP
.RS 4
\fBconvData\fP 

.PP
\fBdtoi\fP 
.RE
.PP

.PP
Definition at line \fB76\fP of file \fBRadixSort\&.hpp\fP\&.
.SS "int getMax (std::vector< int > arr)"

.PP
Gets the largest element of a vector\&. 
.PP
\fBParameters\fP
.RS 4
\fIarr\fP The input array 
.RE
.PP
\fBReturns\fP
.RS 4
Iterator referencing the first instance of the largest value\&. 
.RE
.PP

.PP
Definition at line \fB56\fP of file \fBRadixSort\&.hpp\fP\&.
.SS "void RadixSrt (std::vector< int > & vct)"

.PP
Radix Sort\&. Thats it, there's nothing especial to it its just radix sort

.PP
\fBParameters\fP
.RS 4
\fIvct\fP the vector to be sorted 
.RE
.PP

.PP
Definition at line \fB127\fP of file \fBRadixSort\&.hpp\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Final Programming Project from the source code\&.
